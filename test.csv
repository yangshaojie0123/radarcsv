name	ring	quadrant	isNew	description
Jupyter	adopt	tools	TRUE	"<p>Over the past couple of years, we've noticed a steady rise in the popularity of analytics notebooks. These are Mathematica-inspired applications that combine text, visualization and code in a living, computational document. <strong><a href=""http://jupyter.org/"">Jupyter</a></strong> Notebooks are widely used by our teams for prototyping and exploration in analytics and machine learning. We've moved Jupyter to Adopt for this issue of the Radar to reflect that it has emerged as the current default for Python notebooks. However, we caution to use <a href=""/radar/techniques/productionizing-jupyter-notebooks"">Jupyter Notebooks in production</a>.</p>"
TestCafe	trial	tools	TRUE	"<p>We have good experience using ""post-Selenium"" web UI testing tools such as <a href=""/radar/tools/cypress"">Cypress</a>, <strong><a href=""https://github.com/DevExpress/testcafe"">TestCafe</a></strong> and <a href=""/radar/languages-and-frameworks/puppeteer"">Puppeteer</a>. TestCafe lets you write tests in JavaScript or <a href=""/radar/languages-and-frameworks/typescript"">TypeScript</a> and runs in-browser tests. TestCafe has several useful features that include out-of-the-box parallel execution and HTTP request mocking. TestCafe uses an asynchronous execution model with no explicit wait times, which results in much more stable test suites. Its selector API makes it easier to implement <a href=""https://martinfowler.com/bliki/PageObject.html"">PageObject</a> patterns. TestCafe recently released version 1.0.<em>x</em>, which improved stability and functionality.</p>"
Honeycomb	assess	tools	TRUE	"<p><strong><a href=""https://www.honeycomb.io/"">Honeycomb</a></strong> is an observability tool that ingests rich data from production systems and makes it manageable through dynamic sampling. Developers can log large amounts of rich events and decide later how to slice and correlate them. This interactive approach is useful when working with today's large distributed systems because we've passed the point where we can reasonably anticipate which questions we might want to ask of production systems.</p>"
Kubernetes Operators	assess	tools	TRUE	"<p>We're excited about the impact <a href=""/radar/platforms/kubernetes"">Kubernetes</a> has had on our industry but also concerned about the operational complexity that comes with it. Keeping a Kubernetes cluster up and running and then managing packages deployed on it requires special skills and time. Operational processes such as upgrades, migrations, backups, among others, can be a full-time job. We think that <strong><a href=""https://coreos.com/operators/"">Kubernetes Operators</a></strong> will play a key role in reducing this complexity. The framework provides a standard mechanism to describe automated operational processes for packages running in a Kubernetes cluster. Although Operators were spearheaded and promoted by RedHat, several community-developed Operators for common open-source packages such as <a href=""/radar/tools/jaeger"">Jaeger</a>, <a href=""/radar/platforms/mongodb"">MongoDB</a> and <a href=""/radar/platforms/redis"">Redis</a> have begun to emerge.</p>"
Apollo	adopt	language-and-frameworks	TRUE	"<p>Our teams report that <strong><a href=""http://www.apollographql.com/client"">Apollo</a></strong> has become the library of choice when building a <a href=""/radar/languages-and-frameworks/react-js"">React</a> application that uses GraphQL to access data from a <a href=""/radar/techniques/bff-backend-for-frontends"">back-end</a> service. Although the Apollo project also provides a server framework and a GraphQL gateway, the Apollo client gets our attention because it simplifies the problem of binding UI components to data served by any GraphQL backend. Put simply, this means less code needs to be written than using REST backends and redux.</p>"
fastai	assess	language-and-frameworks	TRUE	"<p><strong><a href=""https://docs.fast.ai/"">fastai</a></strong> is an open-source Python library that simplifies training fast and accurate neural nets. It is built on top of <a href=""/radar/languages-and-frameworks/pytorch"">PyTorch</a> and has become a popular tool for our data scientists. fastai simplifies painful aspects of model training such as preprocessing and loading data down to a few lines of code. It's built on deep learning best practices and has out-of-the-box support for computer vision, natural language processing (NLP) and more. The founders' motivation has been to create an easy-to-use library for deep learning and an improved successor to <a href=""/radar/languages-and-frameworks/keras"">Keras</a>. <a href=""/radar/platforms/google-cloud-platform"">GCP</a>, <a href=""/radar/platforms/aws"">AWS</a> and <a href=""/radar/platforms/azure"">Azure</a> all have already included fastai in their machine images. The creators of fastai, acknowledging the speed and safety limitations of Python, have announced <a href=""https://www.fast.ai/2019/03/06/fastai-swift/"">embracing Swift</a> as an alternative language for deep learning. We'll be closely watching this space.</p>"
AWS Fargate	trial	platforms	TRUE	"<p><strong><a href=""http://aws.amazon.com/fargate/"">AWS Fargate</a></strong>, the docker-as-a-service option on <a href=""/radar/platforms/aws"">AWS</a>, is now widely available across regions. It's a great solution for situations in which teams want to run Docker containers, because <a href=""/radar/platforms/aws-lambda"">AWS Lambda</a> functions aren't powerful enough, without having to manage EC2 instances or Kubernetes clusters. Our teams report generally positive experiences with Fargate; however, the convenience of this managed service can come at a cost, in financial terms.</p>"
Kafka Streams	trial	platforms	TRUE	"<p><strong><a href=""https://kafka.apache.org/documentation/streams/"">Kafka Streams</a></strong> is a lightweight library to build streaming applications. It supports basic streaming APIs such as join, filter, map and aggregate as well as local storage for common use cases such as windowing and sessions. Unlike other stream-processing platforms such as <a href=""/radar/platforms/apache-spark"">Apache Spark</a> and <a href=""https://doc.akka.io/docs/akka-stream-kafka/current/home.html"">Alpakka Kafka</a>, Kafka Streams has been a good fit for scenarios that don't require large-scale distribution and parallel processing; hence we could get away without yet another piece of infrastructure such as cluster schedulers. Naturally, Kafka Streams has been a good choice when operating in the Kafka ecosystem. Kafka Streams is particularly useful when we have to process data strictly in order and exactly once. One particular use case of Kafka Streams is to build a <a href=""https://en.wikipedia.org/wiki/Change_data_capture#Event_Programming"">change data capture (CDC)</a> platform.</p>"
